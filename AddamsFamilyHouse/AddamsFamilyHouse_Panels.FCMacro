#*****************************************************************************
#
#  System        : 
#  Module        : 
#  Object Name   : $RCSfile$
#  Revision      : $Revision$
#  Date          : $Date$
#  Author        : $Author$
#  Created By    : Robert Heller
#  Created       : Mon Jun 2 15:01:05 2025
#  Last Modified : <250602.1719>
#
#  Description	
#
#  Notes
#
#  History
#	
#*****************************************************************************
#
#    Copyright (C) 2025  Robert Heller D/B/A Deepwoods Software
#			51 Locke Hill Road
#			Wendell, MA 01379-9728
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# 
#
#*****************************************************************************


import FreeCAD as App
import Part, TechDraw, Mesh, TechDrawGui
from FreeCAD import Base

import os
import sys
sys.path.append(os.path.dirname(__file__))
import time
from PySide.QtCore import QCoreApplication, QEventLoop, QTimer

def execute(loop, ms):
    timer = QTimer()
    timer.setSingleShot(True)
    
    timer.timeout.connect(loop.quit)
    timer.start(ms)
    loop.exec_()

def sleep(ms):
    if not QCoreApplication.instance():
        app = QCoreApplication([])
        execute(app, ms)
    else:
        loop = QEventLoop()
        execute(loop, ms)


if __name__ == '__main__':
    doc = None
    for docname in App.listDocuments():
        lddoc = App.getDocument(docname)
        if lddoc.Label == 'addams_family_house':
            doc = lddoc
            break
    if doc == None:
        App.open("addams_family_house.FCStd")
        doc = App.getDocument('addams_family_house')
    App.ActiveDocument=doc
    # Clean out old garbage, if any
    for g in doc.findObjects('TechDraw::DrawSVGTemplate'):
        doc.removeObject(g.Name)
    for g in doc.findObjects('TechDraw::DrawPage'):
        doc.removeObject(g.Name)
    for g in doc.findObjects('TechDraw::DrawViewPart'):
        doc.removeObject(g.Name)
    # insert a Page object and assign a template
    doc.addObject('TechDraw::DrawSVGTemplate','SmallCutPanelTemplate')
    doc.SmallCutPanelTemplate.Template = "smallcutpanel.svg"
    doc.addObject('TechDraw::DrawPage','SmallCutPanelPage_1')
    doc.SmallCutPanelPage_1.Template = doc.SmallCutPanelTemplate
    doc.SmallCutPanelPage_1.ViewObject.show()
    doc.addObject('TechDraw::DrawPage','SmallCutPanelPage_2')
    doc.SmallCutPanelPage_2.Template = doc.SmallCutPanelTemplate
    doc.SmallCutPanelPage_2.ViewObject.show()
    doc.addObject('TechDraw::DrawPage','SmallCutPanelPage_3')
    doc.SmallCutPanelPage_3.Template = doc.SmallCutPanelTemplate
    doc.SmallCutPanelPage_3.ViewObject.show()

    house = doc.Sketchfab_Scene_Sketchfab_model_root_GLTF_SceneRootNode_House_0_Object_4
    houseMesh = house.Mesh
    topo = houseMesh.Topology
    print("*** type(topo) is ",type(topo))
    print("*** len(topo) is ",len(topo))
    points, triangles = topo
        






    #houseShape = Part.Shape()
    #houseShape.makeShapeFromMesh(topo, 0.05)
    #obj = doc.addObject("Part::Feature","temp")
    #obj.Shape = Part.Solid(houseShape.removeSplitter())
    
    #print("*** type(house) is ",type(house))
    #frontView = doc.addObject('TechDraw::DrawViewPart','Front_View')
    #doc.SmallCutPanelPage_1.addView(frontView)
    #frontView.Source = obj
    #frontView.X = 300
    #frontView.Y = 200
    #frontView.Rotation = 0.0
    #frontView.Direction = (0.0, 0.0, 1.0)
    #frontView.ScaleType = u"Custom"
    #frontView.Scale=19.05
    #doc.recompute()
    
    #sleep(500)

    #TechDrawGui.exportPageAsPdf(doc.SmallCutPanelPage_1,"AddamsFamilyHouse_Panels_Page1.pdf")
